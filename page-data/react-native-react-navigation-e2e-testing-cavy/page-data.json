{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/react-native-react-navigation-e2e-testing-cavy","result":{"data":{"post":{"__typename":"MdxPost","slug":"/react-native-react-navigation-e2e-testing-cavy","title":"React Native + React Navigation e2e testing with Cavy","date":"13.04.2020","tags":null,"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Native + React Navigation e2e testing with Cavy\",\n  \"date\": \"2020-04-13T00:00:00.000Z\",\n  \"slug\": \"/react-native-react-navigation-e2e-testing-cavy\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://cavy.app/\"\n  }), \"Cavy\"), \" is a awesome React Native e2e testing library.\\nIt's easy to create tests, but usage React Navigation is undocumented. \"), mdx(\"p\", null, \"Here is a technique to control React Navigation 5 navigator in tests.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"// App.ts\\nimport { NavigationContainer } from '@react-navigation/native';\\nimport { useCavy } from 'cavy';\\n\\nexport default function App() {\\n  const generateTestHook = useCavy();\\n  return (\\n    <NavigationContainer ref={generateTestHook('Navigation')}>{/* ... */}</NavigationContainer>\\n  );\\n}\\n\")), mdx(\"p\", null, \"And create navigateBack helper:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"// helper.ts\\nexport async function navigateBack(navigation: any) {\\n    navigation.goBack();\\n}\\n\")), mdx(\"p\", null, \"Call helper from your tests:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"// navgationSpec.ts\\nimport { TestScope } from 'cavy';\\nimport { navigateBack } from './helpers';\\n\\nexport default function(spec: TestScope) {\\n  spec.describe('Test', function() {\\n\\n    spec.it('works', async function() {\\n      const navigationComponent = await spec.findComponent('Navigation');\\n      await navigateBack(navigationComponent)\\n    });\\n  });\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Cavy  is a awesome React Native e2e testing library. \nIt's easy to create tests, but usage React Navigation is undocumented.  Here is aâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/react-native-react-navigation-e2e-testing-cavy","formatString":"DD.MM.YYYY"}}}